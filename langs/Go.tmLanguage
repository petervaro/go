<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>comment</key>
	<string>
		Copyright (C) 2016 Peter Varo
		&lt;http://github.com/petervaro/go&gt;

		This program is free software: you can redistribute it
		and/or modify it under the terms of the GNU General
		Public License as published by the Free Software
		Foundation, either version 3 of the License, or (at your
		option) any later version.

		This program is distributed in the hope that it will be
		useful, but WITHOUT ANY WARRANTY; without even the
		implied warranty of MERCHANTABILITY or FITNESS FOR A
		PARTICULAR PURPOSE. See the GNU General Public License
		for more details.

		You should have received a copy of the GNU General Public
		License along with this program, most likely a file in
		the root directory, called "LICENSE". If not, see
		&lt;http://www.gnu.org/licenses&gt;.
	</string>
	<key>name</key>
	<string>Go</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>match</key>
			<string>//.*$</string>
			<key>name</key>
			<string>comment.line.double_slash.go</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.slash_star.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;=\W|^)\.\d+([eE][+-]?\d+)?i?</string>
			<key>name</key>
			<string>constant.numeric.float_and_complex.decimal.dotted.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\d+\.\d*([eE][+-]?\d+)?i?</string>
			<key>name</key>
			<string>constant.numeric.float_and_complex.decimal.complete.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\d+[eE][+-]?\d+i?</string>
			<key>name</key>
			<string>constant.numeric.float.decimal.undotted.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\d+i</string>
			<key>name</key>
			<string>constant.numeric.complex.decimal.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b0[xX]\h+</string>
			<key>name</key>
			<string>constant.numeric.integer.hexadecimal.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b0[0-7]+</string>
			<key>name</key>
			<string>constant.numeric.integer.octal.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b\d+</string>
			<key>name</key>
			<string>constant.numeric.integer.decimal.go</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#strong_constants</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#language_variables</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(func|var)\b</string>
			<key>name</key>
			<string>keyword.storage.specifiers.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(const)\b</string>
			<key>name</key>
			<string>keyword.type.qualifiers.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(import|package)\b</string>
			<key>name</key>
			<string>keyword.control.module.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(for|range)\b</string>
			<key>name</key>
			<string>keyword.control.iteration.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(switch|case|default)\b</string>
			<key>name</key>
			<string>keyword.control.switch.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(break|continue|goto|fallthrough|return)\b</string>
			<key>name</key>
			<string>keyword.control.jumps.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(if|else)\b</string>
			<key>name</key>
			<string>keyword.control.conditional.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(chan|defer|go|map|select)\b</string>
			<key>name</key>
			<string>keyword.other.other.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\+\+|--|(\+|-|\*|/|%|&amp;|&amp;?\^|\||&lt;&lt;|&gt;&gt;)=</string>
			<key>name</key>
			<string>keyword.operator.assignment.augmented.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(&lt;|&gt;)=?|(=|!)=</string>
			<key>name</key>
			<string>keyword.operator.comparison.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>&amp;&amp;|\|\||!</string>
			<key>name</key>
			<string>keyword.operator.bool.logical.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\+|-|\*|/|%|&amp;|&amp;?\^|\||~|&lt;&lt;|&gt;&gt;|</string>
			<key>name</key>
			<string>keyword.operator.arithmetic.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>:?=</string>
			<key>name</key>
			<string>keyword.operator.assignment.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\.|:</string>
			<key>name</key>
			<string>keyword.operator.access.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>;</string>
			<key>name</key>
			<string>keyword.operator.separator.go</string>
		</dict>
		<dict>
			<key>match</key>
			<string>&lt;-</string>
			<key>name</key>
			<string>aakeyword.operator.receiver.go</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#builtin_types</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#builtin_functions</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>([a-zA-Z_]\w*)\s*\(</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.name.go</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>name</key>
			<string>meta.function_call.go</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?&lt;=struct)\s*{</string>
			<key>end</key>
			<string>}</string>
			<key>name</key>
			<string>meta.struct_defintion.go</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.pointer.go</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?&lt;=^|;)\s*(\**)\s*[a-zA-Z_]\w*(?=\s*(;|$))</string>
					<key>name</key>
					<string>variable.language.struct.member.anonymous.go</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=^|[;.{])\s*[a-zA-Z_]\w*(?=\s*(;|$))</string>
					<key>name</key>
					<string>variable.language.struct.member.anonymous.go</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=^|[,;{])\s*[a-zA-Z_]\w*(?=\s+\w|\s*[\[,*])</string>
					<key>name</key>
					<string>variable.language.struct.member.named.go</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>{</string>
			<key>end</key>
			<string>}</string>
			<key>name</key>
			<string>meta.struct_literal.go</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>[a-zA-Z_]\w*(?=\s*:(?!=|\s*$))</string>
					<key>name</key>
					<string>variable.language.member_name.go</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\[</string>
					<key>end</key>
					<string>\]</string>
					<key>name</key>
					<string>meta.exclude.brackets.go</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;=\.)[a-z_]\w*</string>
			<key>name</key>
			<string>variable.language.member_access.go</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#string_quoted</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>builtin_functions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(append|cap|close|complex|copy|delete|imag|len|make|new|panic|print|println|real|recover)\b</string>
					<key>name</key>
					<string>entity.other.function.builtins.go</string>
				</dict>
			</array>
		</dict>
		<key>builtin_types</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(bool|string|u?int(8|16|32|64)?|byte|rune|float(32|64)|complex(64|128)|error|uintptr)\b</string>
					<key>name</key>
					<string>support.type.go</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b((Complex|Float|Integer)?Type|Type1)\b</string>
					<key>name</key>
					<string>storage.modifier.variable.type.special.go</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(type|struct|interface)\b</string>
					<key>name</key>
					<string>support.type.member.go</string>
				</dict>
			</array>
		</dict>
		<key>language_variables</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(_)\b</string>
					<key>name</key>
					<string>keyword.operator.anonymous.go</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\.{3}</string>
					<key>name</key>
					<string>support.type.variable_number.go</string>
				</dict>
			</array>
		</dict>
		<key>string_esc</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\("|\'|\?|a|b|f|n|r|t|v|\\)</string>
					<key>name</key>
					<string>constant.character.escaped.escape.go</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>invalid.illegal.string.quoted.escape.go</string>
				</dict>
			</array>
		</dict>
		<key>string_fmt</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.interpolated.empty_index.go</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.interpolated.format.go</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.interpolated.bad_index.go</string>
				</dict>
			</dict>
			<key>match</key>
			<string>%(%|((\[\])|\[(((0)|[1-9])\d*)\])?((#|\+)?v|((\d+|\*)\.?(\d+|\*)?|\.(\d+|\*))?f|[bcdeEFgGopqstTxXU]))</string>
			<key>name</key>
			<string>string.interpolated.format.go</string>
		</dict>
		<key>string_hex</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\x\h{,1}</string>
					<key>name</key>
					<string>invalid.illegal.string.quoted.hexadecimal.go</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\x\h{2}</string>
					<key>name</key>
					<string>constant.character.escaped.hexadecimal.go</string>
				</dict>
			</array>
		</dict>
		<key>string_oct</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\[0-7]{,2}</string>
					<key>name</key>
					<string>invalid.illegal.string.quoted.octal.go</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\[0-7]{3}</string>
					<key>name</key>
					<string>constant.character.escaped.octal.go</string>
				</dict>
			</array>
		</dict>
		<key>string_quoted</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.character.escaped.go</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.string.quoted.escaped.go</string>
						</dict>
					</dict>
					<key>match</key>
					<string>'(\\("|\'|\?|a|b|f|n|r|t|v|\\))'</string>
					<key>name</key>
					<string>string.quoted.single.escaped.go</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.character.escaped.go</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.string.quoted.hexadecimal.go</string>
						</dict>
					</dict>
					<key>match</key>
					<string>'(\\x((\h{2})|(\h{,1})))'</string>
					<key>name</key>
					<string>string.quoted.single.hexadecimal.go</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.character.escaped.go</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.string.quoted.hexadecimal.go</string>
						</dict>
					</dict>
					<key>match</key>
					<string>'(\\((u\h{4}|U\h{8})|(u\h{,3}|U\h{,7})))'</string>
					<key>name</key>
					<string>string.quoted.single.escaped.go</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.character.escaped.go</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.string.quoted.octal.go</string>
						</dict>
					</dict>
					<key>match</key>
					<string>'(\\(([0-7]{3})|([0-7]{,2})))'</string>
					<key>name</key>
					<string>string.quoted.single.octal.go</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.string.quoted.single.go</string>
						</dict>
					</dict>
					<key>match</key>
					<string>'(\\|'|\n)'</string>
					<key>name</key>
					<string>string.quoted.single.illegal.go</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.string.quoted.more.go</string>
						</dict>
					</dict>
					<key>match</key>
					<string>'.(.*?)'</string>
					<key>name</key>
					<string>string.quoted.single.regular.go</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>`</string>
					<key>end</key>
					<string>`</string>
					<key>name</key>
					<string>string.quoted.backtick.regular.go</string>
					<key>patterns</key>
					<array/>
				</dict>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double.regular.go</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>invalid.illegal.string.quoted.escaped.go</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(\\("|\'|\?|a|b|f|n|r|t|v|\\))</string>
							<key>name</key>
							<string>constant.quoted.double.escaped.go</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>invalid.illegal.string.quoted.hexadecimal.go</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(\\x((\h{2})|(\h{,1})))</string>
							<key>name</key>
							<string>constant.quoted.double.hexadecimal.go</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>invalid.illegal.string.quoted.hexadecimal.go</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(\\((u\h{4}|U\h{8})|(u\h{,3}|U\h{,7})))</string>
							<key>name</key>
							<string>constant.quoted.double.escaped.go</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>invalid.illegal.string.quoted.octal.go</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(\\(([0-7]{3})|([0-7]{,2})))</string>
							<key>name</key>
							<string>constant.quoted.double.octal.go</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>invalid.illegal.string.quoted.double.go</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(\\|"|\n)</string>
							<key>name</key>
							<string>meta.quoted.double.illegal.go</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string_fmt</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>string_uni</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(\\u\h{,3}|\\U\h{,7})</string>
					<key>name</key>
					<string>invalid.illegal.string.quoted.unicode.go</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\\u\h{4}|\\U\h{8})</string>
					<key>name</key>
					<string>constant.character.escaped.unicode.go</string>
				</dict>
			</array>
		</dict>
		<key>strong_constants</key>
		<dict>
			<key>match</key>
			<string>\b(nil|true|false|iota)\b</string>
			<key>name</key>
			<string>constant.language.word_like.go</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.go</string>
	<key>uuid</key>
	<string>18E265C9-70DE-4D0F-ADC7-73DD2618AED8</string>
</dict>
</plist>
